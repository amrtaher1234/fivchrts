// Generated by https://quicktype.io

export interface Data {
    solutions: Solution[];
}

export interface Solution {
    solution_name: string;
    building_type: string;
    floors:        Floor[];
    reports:       Reports;
}

export interface Floor {
    floor_number: number;
    wings:        Wing[];
}

export interface Wing {
    wing_name: WingName;
    locations: Location[];
}

export interface Location {
    location_name: LocationName;
    units:         Unit[];
}

export enum LocationName {
    Corridor = "corridor",
    Inside = "inside",
    Outside = "outside",
}

export interface Unit {
    unit_type: UnitType;
    unit_name: string;
    x:         number;
    y:         number;
    z:         number;
    w:         number;
    d:         number;
    h:         number;
    windows?:  Window[];
}

export enum UnitType {
    Corridor = "corridor",
    H4D4232C543 = "h4d4232c_543",
    Lift = "lift",
    The11C4232C543 = "11c4232c_543",
}

export interface Window {
    win_name: WinName;
    xw:       number;
    yw:       number;
    zw:       number;
    ww:       number;
    dw:       number;
    hw:       number;
}

export enum WinName {
    Win0 = "win0",
    Win1 = "win1",
    Win2 = "win2",
    Win3 = "win3",
}

export enum WingName {
    Horizontal = "horizontal",
}

export interface Reports {
    units_report:         UnitsReport;
    economic_report:      EconomicReport;
    environmental_report: EnvironmentalReport;
}

export interface EconomicReport {
    project_cost:             ProjectCost;
    table_1_soft_costs:       Table1_SoftCosts;
    table_2_pre_construction: Table2_PreConstruction;
    table_3_construction:     { [key: string]: Table3_Construction };
    income:                   Income;
}

export interface Income {
    table_1_flats_overall_income_dict: { [key: string]: Table1_FlatsOverallIncomeDict };
    project_total_income:              number;
    profit:                            number;
    simple_roi:                        number;
}

export interface Table1_FlatsOverallIncomeDict {
    name:   string;
    income: number;
}

export interface ProjectCost {
    soft_costs:      Constuction;
    pre_constuction: Constuction;
    constuction:     Constuction;
    total:           number;
}

export interface Constuction {
    cost:  number;
    ratio: number;
}

export interface Table1_SoftCosts {
    architect:           Constuction;
    quantity_surveyor:   Constuction;
    structural_engineer: Constuction;
    mechanical_engineer: Constuction;
    project_manager:     Constuction;
    licensing:           Constuction;
    marketing:           Constuction;
    other:               Constuction;
}

export interface Table2_PreConstruction {
    demolition:       Constuction;
    site_preparation: Constuction;
    infrastructure:   Constuction;
    excavation:       Constuction;
    others:           Constuction;
}

export interface Table3_Construction {
    name:  string;
    cost:  number;
    ratio: number;
}

export interface EnvironmentalReport {
    net_zero_building: NetZeroBuilding;
    energy_consumtion: EnergyConsumtion;
    lca_dictionary:    LcaDictionary;
}

export interface EnergyConsumtion {
    consumption_breakdown: ConsumptionBreakdown;
}

export interface ConsumptionBreakdown {
    lighting_consumption: Tion;
    heating_consumption:  Tion;
    cooling_consumption:  Tion;
}

export interface Tion {
    total_kWh_year:         number;
    normalised_kWh_year_m2: number;
}

export interface LcaDictionary {
    breakdown:                       Breakdown;
    operational_emissions_breakdown: OperationalEmissionsBreakdown;
    embodied_carbon_breakdown:       EmbodiedCarbonBreakdown;
}

export interface Breakdown {
    operational_carbon_kgco2_life: number;
    embodied_carbon_kgco2_life:    number;
}

export interface EmbodiedCarbonBreakdown {
    external_wall:              number;
    ground_floor:               number;
    roof:                       number;
    internal_partitions:        number;
    party_wall:                 number;
    internal_floor_and_ceiling: number;
    windows_glazing:            number;
}

export interface OperationalEmissionsBreakdown {
    normalised_emissions_CO2_m2_year: NormalisedEmissionsCO2M2Year;
}

export interface NormalisedEmissionsCO2M2Year {
    heating_emissions_kgCO2_m2_year:  number;
    cooling_emissions_kgCO2_m2_year:  number;
    lighting_emissions_kgCO2_m2_year: number;
}

export interface NetZeroBuilding {
    energy: Energy;
    carbon: Carbon;
}

export interface Carbon {
    overall_emissions: CarbonSavings;
    carbon_savings:    CarbonSavings;
    net_zero:          NetZero;
}

export interface CarbonSavings {
    total_tons_co2_year:      number;
    normalised_kgco2_m2_year: number;
}

export interface NetZero {
    net_zero_percentage: number;
    offset_area:         number;
}

export interface Energy {
    energy_consumption: Tion;
    energy_production:  Tion;
    net_zero:           NetZero;
}

export interface UnitsReport {
    graph_built_area: { [key: string]: GraphBuiltArea };
    table_1:          Table1;
    table_2:          { [key: string]: Table2 };
}

export interface GraphBuiltArea {
    name:         string;
    area_by_unit: number;
}

export interface Table1 {
    nla:              number;
    total_built_area: number;
    efficiency:       number;
}

export interface Table2 {
    name:                      string;
    number_of_units:           number;
    ratio_by_num_of_units:     number;
    ratio_by_nla:              number;
    ratio_by_total_built_area: number;
}
